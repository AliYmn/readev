(()=>{"use strict";let e=!0;function t(e){try{chrome.action?e?chrome.action.setBadgeText({text:""}):(chrome.action.setBadgeText({text:"OFF"}),chrome.action.setBadgeBackgroundColor({color:"#888888"})):chrome.browserAction&&(e?chrome.browserAction.setBadgeText({text:""}):(chrome.browserAction.setBadgeText({text:"OFF"}),chrome.browserAction.setBadgeBackgroundColor({color:"#888888"})))}catch(e){console.error("Error updating extension icon:",e)}}chrome.runtime.onInstalled.addListener(r=>{console.log("Readev extension installed"),chrome.storage.local.get(["extensionEnabled"],r=>{e=void 0===r.extensionEnabled||r.extensionEnabled,t(e)}),"install"===r.reason&&chrome.tabs.create({url:"https://devurls.com/"})}),chrome.tabs.onCreated.addListener(t=>{!e&&t.id&&t.pendingUrl?.includes("newtab.html")&&setTimeout(()=>{try{chrome.tabs.remove(t.id),chrome.tabs.create({url:"about:blank"})}catch(e){console.error("Error redirecting tab:",e)}},100)}),chrome.runtime.onMessage.addListener((r,o,c)=>{if("fetchFeed"===r.action)return e?(async function(e){try{const t=await fetch(e,{method:"GET",headers:{Accept:"application/rss+xml, application/xml, text/xml, application/atom+xml"}});if(!t.ok)throw new Error(`Failed to fetch feed: ${t.status} ${t.statusText}`);return await t.text()}catch(e){throw console.error("Error fetching feed:",e),e}}(r.url).then(e=>c({success:!0,data:e})).catch(e=>c({success:!1,error:e.toString()})),!0):(c({success:!1,error:"Extension is disabled"}),!0);if("updateExtensionState"===r.action){if(e=r.enabled,t(e),chrome.storage.local.set({extensionEnabled:e}),!e)try{chrome.tabs.query({url:chrome.runtime.getURL("newtab.html")},e=>{e.forEach(e=>{e.id&&(chrome.tabs.remove(e.id),chrome.tabs.create({url:"about:blank"}))})})}catch(e){console.error("Error updating existing tabs:",e)}return c({success:!0}),!0}})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,